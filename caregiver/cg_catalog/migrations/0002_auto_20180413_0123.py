# Generated by Django 2.0.4 on 2018-04-13 04:23

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('cg_catalog', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CareGiver',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='ID unico do profissional cuidador de idosos', primary_key=True, serialize=False)),
                ('first_name', models.CharField(help_text='Digite o  primeiro nome do profissional cuidador de idosos', max_length=64)),
                ('last_name', models.CharField(help_text='Digite o  sobrenome do profissional cuidador de idosos', max_length=64)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('summary', models.TextField(help_text='Digite um breve resumo do profissional cuidador de idosos', max_length=1000)),
                ('contact_phone', models.CharField(help_text='telefone(s) de contato do profissional cuidador de idosos', max_length=128)),
                ('contact_email', models.EmailField(help_text='e-mail de contato do profissional cuidador de idosos', max_length=128)),
                ('work_dayshift', models.BooleanField(help_text='Disponivel para trabalhar em turno comercial?')),
                ('dayshift_rate', models.DecimalField(decimal_places=2, help_text='Valor em Reais por turno comercial', max_digits=7)),
                ('work_nightshift', models.BooleanField(help_text='Disponivel para trabalhar em turno noturno?')),
                ('nightshift_rate', models.DecimalField(decimal_places=2, help_text='Valor em Reais por turno noturno', max_digits=7)),
                ('work_weekend', models.BooleanField(help_text='Disponivel para trabalhar em dias de final de semana?')),
                ('weekend_rate', models.DecimalField(decimal_places=2, help_text='Valor em Reais por dia de final de semana trabalhado', max_digits=7)),
                ('fullmonth_rate', models.DecimalField(decimal_places=2, help_text='Valor em Reais por mes cheio/completo de trabalho sem final de semana', max_digits=7)),
                ('cook_available', models.BooleanField(help_text='Disponivel para cozinhar/prepara refeicoes?')),
                ('recommendation_name', models.CharField(help_text='Nome de um contato para recomendacao', max_length=128)),
                ('recommendation_phone', models.CharField(help_text='telefone(s) de um contato para recomendacao', max_length=128)),
                ('recommendation_email', models.EmailField(help_text='e-mail de um contato para recomendacao', max_length=128)),
            ],
            options={
                'ordering': ['current_city', 'last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_level', models.CharField(blank=True, choices=[('PCF', 'Certificado Profissional'), ('CGT', 'Graduacao em Faculdade/Universidade'), ('MST', 'Mestrado'), ('DTD', 'Doutorado'), ('PHD', 'Pos-Doutorado'), ('MBA', 'MBA - Mestrado Profissional em Negocios'), ('MSC', 'MSC - Mestrado Profissional em Ciencias'), ('OCT', 'Outros Tipos de Certificados')], default='PCF', help_text='Escolha o tipo/nivel do certificado/diploma', max_length=3)),
                ('certificate_descrip', models.CharField(help_text='Digite o nome/descricao do certificado/diploma', max_length=128)),
                ('certificate_entity', models.CharField(help_text='Digite o nome da entidade certificadora, faculdade ou universidade', max_length=200)),
                ('certificate_year', models.CharField(help_text='Digite o ano em que obteve o certificado/diploma', max_length=4)),
            ],
            options={
                'ordering': ['certificate_year', 'certificate_descrip'],
            },
        ),
        migrations.CreateModel(
            name='SpokenLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_name', models.CharField(help_text='Digite o nome da lingua falada', max_length=64)),
            ],
            options={
                'ordering': ['language_name'],
            },
        ),
        migrations.AlterField(
            model_name='city',
            name='city_name',
            field=models.CharField(help_text='Digite o nome da cidade', max_length=128),
        ),
        migrations.AlterField(
            model_name='city',
            name='city_state',
            field=models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AM', 'Amazonas'), ('AP', 'Amapa'), ('BA', 'Bahia'), ('CE', 'Ceara'), ('DF', 'Distrito Federal'), ('ES', 'Espirito Santo'), ('GO', 'Goias'), ('MA', 'Maranhao'), ('MG', 'Minas Gerais'), ('MS', 'Mato Grosso do Sul'), ('MT', 'Mato Grosso'), ('PA', 'Para'), ('PB', 'Paraiba'), ('PE', 'Pernambuco'), ('PI', 'Piaui'), ('PR', 'Parana'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RO', 'Rondonia'), ('RR', 'Roraima'), ('RS', 'Rio Grande do Sul'), ('SC', 'Santa Catarina'), ('SE', 'Sergipe'), ('SP', 'Sao Paulo'), ('TO', 'Tocantins')], default='', help_text='Escolha a UF da cidade', max_length=2),
        ),
        migrations.AddField(
            model_name='caregiver',
            name='certificates',
            field=models.ManyToManyField(help_text='Escolha os certificados/diplomas obtidos pelo profissional cuidador de idosos', to='cg_catalog.Certificate'),
        ),
        migrations.AddField(
            model_name='caregiver',
            name='current_city',
            field=models.ForeignKey(help_text='Escolha a cidade de residencia do cuidador de idosos', null=True, on_delete=django.db.models.deletion.SET_NULL, to='cg_catalog.City'),
        ),
        migrations.AddField(
            model_name='caregiver',
            name='spoken_languages',
            field=models.ManyToManyField(help_text='Escolha os idiomas falados fluentemente pelo profissional cuidador de idosos', to='cg_catalog.SpokenLanguage'),
        ),
    ]
